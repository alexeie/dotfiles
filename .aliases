# --------------------
# Navigation Shortcuts
# --------------------
alias cdownloads="cd '/mnt/c/Documents and Settings/alei/Downloads'" # Access Windows downloads folder
alias cdownloads_dir="/mnt/c/Documents and Settings/alei/Downloads" # Access Windows downloads folder
alias kh2581downloads_dir="/mnt/c/Documents and Settings/kh2581/Downloads"
alias clr="clear" # Clear terminal
alias p="pwd;echo" # Print current working directory
alias dotfiles="cd ~/dotfiles" # Navigate to dotfiles directory
alias repos="cd ~/repos" # Navigate to repos directory
alias sf="cd ~/repos/snowflake"
# up n # Command defined as custom function. Move up n steps in directories
# find-files
# find-grep 

# --------------------
# Configuration Shortcuts
# --------------------
alias zshconfig="nano ~/.zshrc" # Edit zsh configuration file
alias aliascfg="nano ~/.aliases" # Edit aliases file
alias ohmyzsh="nano ~/.oh-my-zsh" # Edit Oh My Zsh configuration
# delete-idfiles # Delete idfiles generating when pasting into ubuntu from Windows
# fix-zsh-history # Fix corrupted history
# gen_pass n z # Call python function to generate n safe passwords of z characters

# --------------------
# Virtual Environment Shortcuts
# --------------------
alias start_venv='echo "source venv/bin/activate"; source venv/bin/activate' # Start virtual environment
alias svenv="source venv/bin/activate" # Activate virtual environment (assuming it's already set up)

# --------------------
# Git Shortcuts
# --------------------
alias git-shorts='echo "gs, gc, co, gaa, gd, gdc"'
alias gs='echo "git status";git status'
alias gc='echo "git commit";git commit'
alias gc-amend='echo "git commit --amend --no-edit";git commit --amend --no-edit'
alias co='echo "git checkout";git checkout'
alias gcb='function _gcb(){ git checkout -b $(echo "$1" | tr " " "_"); }; _gcb'
alias gaa='echo "git add -A";git add -A' # Combination of git add . (stages new and modified files) + git add -u (stages modified and deleted files)
alias gau='echo "git add -u (Modified and deleted files only, not new files)";git add -u' # Stages modified and deleted file onlys
alias gd='echo "git diff";git diff'
alias gdc='echo "git diff --cached";git diff --cached'
alias gpu='echo "git pull";git pull'

# Fetch origin, get new feat branch and switch to the branch
alias gtr='f() { git fetch origin && git checkout --track "origin/$1"; }; f'

# --------------------
# File/Directory Listing Shortcuts
# --------------------
alias la="ls --group-directories-first -Fha" # List files and directories with details
# hgrep # Search git history for pattern

# --------------------
# Terraform Shortcuts
# --------------------
alias tf="terraform"
alias tf_debug='export TF_LOG=DEBUG' # Set Terraform log level to DEBUG
alias tf_warn='export TF_LOG=WARN' # Set Terraform log level to WARN
alias tfdebugnow='TF_LOG=debug' # Log level to debug for current command only
alias enable_tflogs='export TF_LOG_PATH="tmp/terraform.log"'

# --------------------
# Tree Command Shortcuts
# --------------------
alias t1='echo "tree -a -L 1 (ignoring .gitignore folders)";tree -a -L 1 --gitignore' # Tree view with depth 1, ignoring .gitignore files
alias t2='echo "tree -a -L 2 (ignoring .gitignore folders)";tree -a -L 2 --gitignore' # Tree view with depth 2, ignoring .gitignore files
alias t3='echo "tree -a -L 2 (ignoring .gitignore folders)";tree -a -L 3 --gitignore' # Tree view with depth 3, ignoring .gitignore files

# --------------------
# Code Editor Shortcuts
# --------------------
# alias co='echo -e "code .";code .' # Open current directory in Visual Studio Code

# --------------------
# Docker
# --------------------
alias d-stop-all=docker stop $(docker ps -q) # Stop all running containers

# -------------
# Utilities
# -------------
alias bat=batcat
alias ns=norm_str

# --------------------
# AWS/Terraform Authentication Shortcuts
# --------------------
alias tfauth1='echo -e "====\nCOMMAND:\n aws sso login --profile assumer\n====";aws sso login --profile assumer' # AWS SSO login with profile "sso-prod-team-access"
alias tfauth2='echo -e "====\nCOMMAND:\n export AWS_PROFILE=assumer\n====";export AWS_PROFILE=assumer' # Set AWS profile to "assumer"
alias tfauth='tfauth1;echo " ";tfauth2' # Combined AWS authentication steps
# ----- Login to prod specifically:
alias tfauth_prod1='echo -e "====\nCOMMAND:\n aws sso login --profile sso-prod-team-access\n====";aws sso login --profile sso-prod-team-access' # AWS SSO login with profile "sso-prod-eks"
alias tfauth_prod2='echo -e "====\nCOMMAND:\n export AWS_PROFILE=sso-prod-team-access\n====";export AWS_PROFILE=sso-prod-team-access' # Set AWS profile to "sso-prod-eks"
alias tfauth_prod='tfauth_prod1;echo " ";tfauth_prod2' # Combined AWS authentication steps

# Save terraform debug logs aswell as the plan
# tfplanwdebug= 'TF_LOG=debug terraform plan -out=tfplan.out > tfplan.log 2> tfdebug.log'

# -------------
# Kubectl
# -------------
alias awsconfig='echo -e "~/.aws/config";nano ~/.aws/config'
alias awslogin-dev='echo -e "aws sso login --profile sso-dev-eks";aws sso login --profile sso-dev-eks'
alias awslogin-qa='echo -e "aws sso login --profile sso-qa-eks";aws sso login --profile sso-qa-eks'

alias k='kubectl'

alias gnodes='k get nodes'
alias gpods='k get pods'
alias gjobs='k get jobs'
alias gdepl='k get deployments'
alias gserv='k get services'

alias dpods='k delete pods'
alias djobs='k delete jobs'
alias ddepl='k delete deployments'

alias ncdp='-n coredataplatform'
alias gdhpods='echo "kubectl get pods | grep -E datahub|open";gpods | grep -E "datahub|open"'
#alias gdhpods_w='watch -n 5 "kubectl get pods | grep -E \"datahub|opensearch\""'
alias gdhpods_w='f(){ interval=5; [ $# -ge 1 ] && interval="$1"; watch -n "$interval" "kubectl get pods | grep -E \"datahub|opensearch\""; }; f'

alias gdhjobs='echo "kubectl get jobs | grep -E datahub|open";gjobs | grep -E "datahub|open"'
alias gdhjobs_w='echo "kubectl get jobs | grep -E datahub|open --watch";gjobs --watch| grep -E "datahub|open"'
alias kdeletefailedpods='echo "kubectl delete pods -n coredataplatform --field-selector status.phase=Failed";kubectl delete pods -n coredataplatform --field-selector status.phase=Failed'
alias kdeletefailedjobs='echo "kubectl delete jobs -n coredataplatform --field-selector status.failed=1";kubectl delete jobs -n coredataplatform --field-selector status.failed=1'

# Initiate python dir
alias init-py="echo 'Initiating new python directory...\ngit init + pyenv setup + venv + py .gitignore';git init && pyenv local 3.12.4 && python3 -m venv venv && wget https://raw.githubusercontent.com/github/gitignore/main/Python.gitignore -O .gitignore && touch main.py"
